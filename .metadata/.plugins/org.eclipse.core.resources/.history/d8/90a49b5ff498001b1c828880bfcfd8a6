package com.board.controller;

import java.util.List;

import javax.inject.Inject;
import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import com.board.dao.BoardDAO;
import com.board.domain.BoardVO;
import com.board.service.BoardService;

@Controller
@RequestMapping("/board/*")
public class BoardController {

	@Inject
	private BoardService service;

	// 게시물 목록
	@RequestMapping(value = "/list", method = RequestMethod.GET)
	public void getList(Model model) throws Exception {
  
		List list = null; list = service.list();
		model.addAttribute("list", list);
	
	}
	
	// 게시물 작성
	@RequestMapping(value = "/write", method = RequestMethod.GET)
	public void getWirte() throws Exception {
		
	}
	
	// 게시물 작성
		@RequestMapping(value = "/write", method = RequestMethod.POST)
		public String postWirte(BoardVO vo) throws Exception {
			service.write(vo);
			
			return "redirect:/board/list";
		}
		
	// 게시물 조회
		@RequestMapping(value = "/view", method = RequestMethod.GET)
		public void getView(@RequestParam("num") int num, Model model) throws Exception {
			
			BoardVO vo = service.view(num);
			
			model.addAttribute("view" , vo);
		}
		
	// 게시물 수정
		@RequestMapping(value = "/modify", method = RequestMethod.GET)
		public void getModify(@RequestParam("num") int num, Model model) throws Exception {
			
			BoardVO vo = service.view(num);
			
			model.addAttribute("view" , vo);
		}

	// 게시물 수정
		@RequestMapping(value = "/modify", method = RequestMethod.POST)
		public String postModify(BoardVO vo) throws Exception {
					
			service.modify(vo);
					
			return "redirect:/board/view?num=" + vo.getNum();
		
		}
	
	// 게시물 삭제
		@RequestMapping(value = "/delete", method = RequestMethod.GET)
		public String getDelete(@RequestParam("num") int num) throws Exception {
							
			service.delete(num);
			
			return "redirect:/board/list";
				
				}
		
	//게시물 추천
    @RequestMapping("/recommend")
	    public String recommend (HttpServletRequest request, ModelMap model ,@RequestParam int num) throws Exception {
    	BoardVO vo = service.view(num);
    	String userId = (String)model.get("userId");
    	try {
    
    		
    		
    		if(!vo.getWriter().equals(userId)) {
    			service.recommend(num);
    		}
    	} catch (Exception e) {
    		e.printStackTrace();
    	}
    	
    	  model.addAttribute("view" , vo);
	      return "redirect:/board/list"; 
	    }

}

